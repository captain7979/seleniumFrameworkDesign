<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-21T19:20:36 IST" name="Suite" finished-at="2022-09-21T19:21:00 IST" duration-ms="24289">
    <groups>
      <group name="ErrorHandling">
        <method signature="errorValidation.loginPageValidation()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" name="loginPageValidation" class="rudraAcademy.errorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="purchaseOrder">
        <method signature="submitOrder.submitorder(java.util.HashMap)[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" name="submitorder" class="rudraAcademy.submitOrder"/>
      </group> <!-- purchaseOrder -->
    </groups>
    <test started-at="2022-09-21T19:20:36 IST" name="Error Validation" finished-at="2022-09-21T19:20:53 IST" duration-ms="16623">
      <class name="rudraAcademy.errorValidation">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:36 IST" name="lunchApplication" finished-at="2022-09-21T19:20:44 IST" duration-ms="7401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginPageValidation()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:44 IST" name="loginPageValidation" finished-at="2022-09-21T19:20:44 IST" duration-ms="657" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or1 password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or1 password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at rudraAcademy.errorValidation.loginPageValidation(errorValidation.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPageValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:45 IST" name="tearDown" finished-at="2022-09-21T19:20:45 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:45 IST" name="lunchApplication" finished-at="2022-09-21T19:20:50 IST" duration-ms="4993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="prodctValidation()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:50 IST" name="prodctValidation" finished-at="2022-09-21T19:20:53 IST" duration-ms="2815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prodctValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rudraAcademy.errorValidation@1fa1cab1]" started-at="2022-09-21T19:20:53 IST" name="tearDown" finished-at="2022-09-21T19:20:53 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rudraAcademy.errorValidation -->
    </test> <!-- Error Validation -->
    <test started-at="2022-09-21T19:20:36 IST" name="submitOrderTest" finished-at="2022-09-21T19:21:00 IST" duration-ms="24289">
      <class name="rudraAcademy.submitOrder">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:37 IST" name="lunchApplication" finished-at="2022-09-21T19:20:43 IST" duration-ms="6950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitorder(java.util.HashMap)[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:43 IST" name="submitorder" data-provider="getData" finished-at="2022-09-21T19:20:47 IST" duration-ms="3929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Rudra123*, email=rudraprasad482@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitorder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:47 IST" name="tearDown" finished-at="2022-09-21T19:20:47 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:47 IST" name="lunchApplication" finished-at="2022-09-21T19:20:52 IST" duration-ms="4060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitorder(java.util.HashMap)[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:52 IST" name="submitorder" data-provider="getData" finished-at="2022-09-21T19:20:55 IST" duration-ms="3928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Abc@1234, email=rudra@abc.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitorder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:55 IST" name="tearDown" finished-at="2022-09-21T19:20:56 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:20:56 IST" name="lunchApplication" finished-at="2022-09-21T19:21:00 IST" duration-ms="4108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderHistory()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:21:00 IST" name="orderHistory" finished-at="2022-09-21T19:21:00 IST" depends-on-methods="rudraAcademy.submitOrder.submitorder" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rudraAcademy.submitOrder@6bc407fd]" started-at="2022-09-21T19:21:00 IST" name="tearDown" finished-at="2022-09-21T19:21:00 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rudraAcademy.submitOrder -->
    </test> <!-- submitOrderTest -->
  </suite> <!-- Suite -->
</testng-results>
